name: Deploy Documentation
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      # Step 3: Install required Python dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Create a cache directory explicitly for pip cache if it doesn't exist
      - name: Create pip cache directory
        run: |
          mkdir -p ~/.cache/pip

      # Step 5: Cache MkDocs dependencies after install
      - name: Cache MkDocs dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-mkdocs-v1-${{ hashFiles('mkdocs.yml') }}
          restore-keys: |
            ${{ runner.os }}-mkdocs-v1-

      # Step 6: Validate MkDocs configuration
      - name: Validate MkDocs configuration
        run: mkdocs build --config-file mkdocs.yml --strict

      # Step 7: Build and deploy documentation
      - name: Build and deploy documentation
        run: mkdocs gh-deploy --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Post-job cleanup (optional step to remove any temporary files if needed)
      - name: Cleanup
        run: |
          echo "Post-job cleanup"
          rm -rf ~/.cache/pip  # You can remove this if caching is working fine